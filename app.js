// –î–∞–Ω–Ω—ã–µ —Ç–æ–≤–∞—Ä–æ–≤
const products = [
  {
    id: 1,
    name: "–í–∏–Ω—Ç–∞–∂–Ω–∞—è –±–ª—É–∑–∫–∞ —Å –≤—ã—à–∏–≤–∫–æ–π",
    brand: "–ü–æ–ª—å—à–∞, –≤–∏–Ω—Ç–∞–∂",
    category: "–ë–ª—É–∑–∫–∏",
    size: "XXL",
    measurements: {
      sleeve: 61,
      chest: 134,
      waist: 130,
      length: 74
    },
    material: "–ü–æ–ª–∏—ç—Å—Ç–µ—Ä",
    color: "–ë–µ–∂–µ–≤—ã–π —Å –≤—ã—à–∏–≤–∫–æ–π",
    features: [
      "–ü—É–≥–æ–≤–∏—Ü—ã —Å–∫—Ä—ã—Ç—ã –ø–æ–¥ –ø–ª–∞–Ω–∫—É",
      "–†–∞–∑—Ä–µ–∑—ã –ø–æ –±–æ–∫–∞–º 10—Å–º",
      "–ï—Å—Ç—å –ø–æ–¥–ø–ª–µ—á–Ω–∏–∫–∏",
      "–ê–∂—É—Ä–Ω—ã–π –≤–æ—Ä–æ—Ç–Ω–∏–∫ —Å –≥—Ä–∏–±–æ—á–∫–∞–º–∏",
      "–ò–∑—É–º–∏—Ç–µ–ª—å–Ω–∞—è –≤—ã—à–∏—Ç–∞—è –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ –±–µ–ª–æ—á–∫—É"
    ],
    condition: "–ò–¥–µ–∞–ª—å–Ω–∞—è —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç—å",
    price: 3000,
    status: "sold",
    description: "ü•∞ *–ü–æ–ª—å—à–∞, –≤–∏–Ω—Ç–∞–∂, –∏–¥–µ–∞–ª—å–Ω–∞—è —Å–æ—Ö—Ä–∞–Ω–Ω–æ—Å—Ç—å* –ê–∂—É—Ä–Ω—ã–π –≤–æ—Ä–æ—Ç–Ω–∏–∫ —Å –≥—Ä–∏–±–æ—á–∫–∞–º–∏ –Ω–∞ —É–≥–æ–ª–∫–∞—Ö –∏ –∏–∑—É–º–∏—Ç–µ–ª—å–Ω–∞—è –≤—ã—à–∏—Ç–∞—è –∏—Å—Ç–æ—Ä–∏—è –ø—Ä–æ –±–µ–ª–æ—á–∫—É –¥–µ–ª–∞—é—Ç —ç—Ç—É –±–ª—É–∑–∫—É —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –Ω–∞—Ö–æ–¥–∫–æ–π!"
  },
  {
    id: 2,
    name: "–î–∏–∑–∞–π–Ω–µ—Ä—Å–∫–æ–µ –ø–ª–∞—Ç—å–µ –º–∏–∫—Å",
    brand: "–ò—Ç–∞–ª–∏—è (–±—Ä–µ–Ω–¥ –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω)",
    category: "–ü–ª–∞—Ç—å—è",
    size: "M",
    measurements: {
      chest: 88,
      waist: 90,
      hips: 98,
      length: 82
    },
    material: "–®—ë–ª–∫, —à–µ—Ä—Å—Ç—å, —Ö–ª–æ–ø–æ–∫, –ø–æ–ª–∏—ç—Å—Ç–µ—Ä",
    color: "–ú–∏–∫—Å –æ—Ç—Ç–µ–Ω–∫–æ–≤",
    features: [
      "–ò—Ç–∞–ª–∏—è",
      "–û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –¥–∏–∑–∞–π–Ω",
      "–£–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å–æ—Å—Ç–∞–≤"
    ],
    condition: "–û—Ç–ª–∏—á–Ω–æ–µ",
    price: 2000,
    status: "sold",
    description: "üíó *–ù–µ—Ç —ç—Ç–∏–∫–µ—Ç–∫–∏, –Ω–æ —ç—Ç–æ –∫–∞–∫–æ–π-—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –±—Ä–µ–Ω–¥* –ò—Ç–∞–ª–∏—è! –°–æ—Å—Ç–∞–≤ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π: –∏ —à—ë–ª–∫, –∏ —à–µ—Ä—Å—Ç—å, –∏ —Ö–ª–æ–ø–æ–∫, –∏ –ø–æ–ª–∏—ç—Å—Ç–µ—Ä‚Ä¶ –û—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –¥–∏–∑–∞–π–Ω!"
  },
  {
    id: 3,
    name: "–õ–µ—Ç–Ω—è—è —Ä—É–±–∞—à–∫–∞ –≤ –ø–æ–ª–æ—Å–∫—É",
    brand: "Camp",
    category: "–†—É–±–∞—à–∫–∏",
    size: "L",
    measurements: {
      chest: 102,
      waist: 106,
      hips: 106,
      length: 66
    },
    material: "–•–ª–æ–ø–æ–∫",
    color: "–¶–≤–µ—Ç–Ω—ã–µ –±–ª–∏–∫–∏ 90-—Ö",
    features: [
      "–í–∏–Ω—Ç–∞–∂–Ω—ã–π –ø—Ä–∏–Ω—Ç",
      "–ò–¥–µ–∞–ª—å–Ω–∞ –¥–ª—è –ª–µ—Ç–Ω–∏—Ö –æ–±—Ä–∞–∑–æ–≤",
      "–ö–∞–∫ —Ü–≤–µ—Ç–Ω—ã–µ –±–ª–∏–∫–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å—Ç–∞—Ä–æ–≥–æ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞"
    ],
    condition: "–û—Ç–ª–∏—á–Ω–æ–µ",
    price: 1600,
    status: "available",
    description: "*Camp* –í–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–π —Ü–≤–µ—Ç, –∫–æ—Ç–æ—Ä—ã–º –º–æ–∂–Ω–æ –∑–∞–∏–≥—Ä–∞—Ç—å—Å—è, —Å–æ–∑–¥–∞–≤–∞—è –ª–µ—Ç–Ω–∏–µ –æ–±—Ä–∞–∑—ã! –ü–æ–ª–æ—Å—ã —Å —ç—Ç–æ–π —Ä—É–±–∞—à–∫–∏ - –∫–∞–∫ —Ü–≤–µ—Ç–Ω—ã–µ –±–ª–∏–∫–∏ –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å—Ç–∞—Ä–æ–≥–æ —Ç–µ–ª–µ–≤–∏–∑–æ—Ä–∞ üì∫"
  },
  {
    id: 4,
    name: "–†–æ–º–∞–Ω—Ç–∏—á–Ω–æ–µ –ø–ª–∞—Ç—å–µ —Å –∫—Ä—É–∂–µ–≤–æ–º",
    brand: "–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π –±—Ä–µ–Ω–¥",
    category: "–ü–ª–∞—Ç—å—è",
    size: "S-M",
    measurements: {
      chest: 86,
      waist: 84,
      hips: 94,
      length: 95
    },
    material: "–•–ª–æ–ø–æ–∫ —Å –∫—Ä—É–∂–µ–≤–æ–º",
    color: "–¶–≤–µ—Ç –ø—ã–ª—å–Ω—ã–π –ª—ë–Ω",
    features: [
      "–ö—Ä—É–∂–µ–≤–∞, —Ä—é—à–∏, –ø—É–≥–æ–≤–∏—Ü—ã, –º–∞–Ω–∂–µ—Ç—ã",
      "–ú–æ–≥–ª–∞ –±—ã —Å—ã–≥—Ä–∞—Ç—å –≥–ª–∞–≤–Ω—É—é —Ä–æ–ª—å –≤ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º —Ä–æ–º–∞–Ω–µ",
      "–î–≤–µ –Ω–µ–∑–∞–º–µ—Ç–Ω—ã–µ –ø—É–≥–æ–≤–∫–∏ —Å —Ü–≤–µ—Ç–æ—á–∫–æ–º —É —à–µ–∏",
      "–ü–æ–¥ —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–µ –æ–±—Ä–∞–∑—ã –¥–ª—è –ø—Ä–æ–≥—É–ª–∫–∏ –ø–æ –Ω–∞–±–µ—Ä–µ–∂–Ω—ã–º"
    ],
    condition: "–û—Ç–ª–∏—á–Ω–æ–µ",
    price: 2500,
    status: "available",
    description: "‚ú® *–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π –±—Ä–µ–Ω–¥* –¶–≤–µ—Ç - –ø—ã–ª—å–Ω—ã–π –ª—ë–Ω. –ö—Ä—É–∂–µ–≤–∞, —Ä—é—à–∏, –ø—É–≥–æ–≤–∏—Ü—ã, –º–∞–Ω–∂–µ—Ç—ã‚Ä¶ –æ–Ω–∞ —Ç–æ—á–Ω–æ –º–æ–≥–ª–∞ –±—ã —Å—ã–≥—Ä–∞—Ç—å –≥–ª–∞–≤–Ω—É—é —Ä–æ–ª—å –≤ –∫–∞–∫–æ–º-–Ω–∏–±—É–¥—å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–º —Ä–æ–º–∞–Ω–µ!"
  },
  {
    id: 5,
    name: "–Ø—Ä–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞ —Å –ø—Ä–∏–Ω—Ç–æ–º",
    brand: "–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π –±—Ä–µ–Ω–¥",
    category: "–§—É—Ç–±–æ–ª–∫–∏",
    size: "M",
    measurements: {
      chest: 92,
      waist: 90,
      length: 68
    },
    material: "–•–ª–æ–ø–æ–∫",
    color: "–Ø—Ä–∫–∏–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞",
    features: [
      "–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π –±—Ä–µ–Ω–¥",
      "–õ—é–±–∏—Ç —è—Ä–∫–∏–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∏ –ø—Ä–∏–Ω—Ç—ã",
      "–¶–≤–µ—Ç–æ—á–Ω—ã–π –ø—Ä–∏–Ω—Ç"
    ],
    condition: "–û—Ç–ª–∏—á–Ω–æ–µ",
    price: 1200,
    status: "available",
    description: "üå∏ *–ï–≤—Ä–æ–ø–µ–π—Å–∫–∏–π –±—Ä–µ–Ω–¥, –∫–æ—Ç–æ—Ä—ã–π –æ—á–µ–Ω—å –ª—é–±–∏—Ç —è—Ä–∫–∏–µ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —Ü–≤–µ—Ç–∞ –∏ –ø—Ä–∏–Ω—Ç—ã* –ú–Ω–µ –æ—á–µ–Ω—å –Ω–∞–ø–æ–º–∏–Ω–∞–µ—Ç —Ö—Ä—É—Å—Ç—è—â—É—é –ø–æ–¥—É—à–µ—á–∫—É –∫ –∑–∞–≤—Ç—Ä–∞–∫—É üòä"
  },
  {
    id: 6,
    name: "–î–∂–∏–Ω—Å–æ–≤–∞—è –∫—É—Ä—Ç–∫–∞ –æ–≤–µ—Ä—Å–∞–π–∑",
    brand: "Vintage Denim",
    category: "–í–µ—Ä—Ö–Ω—è—è –æ–¥–µ–∂–¥–∞",
    size: "L-XL",
    measurements: {
      chest: 110,
      waist: 108,
      length: 65
    },
    material: "–î–µ–Ω–∏–º",
    color: "–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å–∏–Ω–∏–π",
    features: [
      "–û–≤–µ—Ä—Å–∞–π–∑ —Ñ–∞—Å–æ–Ω",
      "–ü–æ—Ç–µ—Ä—Ç–æ—Å—Ç–∏ –≤ —Å—Ç–∏–ª–µ 90-—Ö",
      "–ú–µ—Ç–∞–ª–ª–∏—á–µ—Å–∫–∏–µ –ø—É–≥–æ–≤–∏—Ü—ã"
    ],
    condition: "–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–µ–µ",
    price: 2800,
    status: "available",
    description: "üß• *Vintage Denim* –ö–ª–∞—Å—Å–∏–∫–∞! –û–≤–µ—Ä—Å–∞–π–∑ –¥–∂–∏–Ω—Å–æ–≤–∫–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—á–Ω—ã–º–∏ –ø–æ—Ç–µ—Ä—Ç–æ—Å—Ç—è–º–∏ —ç–ø–æ—Ö–∏ 90-—Ö"
  },
  {
    id: 7,
    name: "–®–∏—Ñ–æ–Ω–æ–≤–∞—è –±–ª—É–∑–∫–∞ –Ω—é–¥",
    brand: "Zara",
    category: "–ë–ª—É–∑–∫–∏",
    size: "S",
    measurements: {
      chest: 88,
      waist: 86,
      length: 62
    },
    material: "–®–∏—Ñ–æ–Ω",
    color: "–ù—é–¥–æ–≤—ã–π –±–µ–∂",
    features: [
      "–ü–æ–ª—É–ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è —Ç–µ–∫—Å—Ç—É—Ä–∞",
      "–ó–∞–≤—è–∑–∫–∏ –Ω–∞ —Ä—É–∫–∞–≤–∞—Ö",
      "–ò–¥–µ–∞–ª—å–Ω–∞ –ø–æ–¥ –¥–µ–ª–æ–≤–æ–π —Å—Ç–∏–ª—å"
    ],
    condition: "–û—Ç–ª–∏—á–Ω–æ–µ",
    price: 1800,
    status: "available",
    description: "*Zara* –ù–µ–∂–Ω–µ–π—à–∞—è —à–∏—Ñ–æ–Ω–æ–≤–∞—è –±–ª—É–∑–∫–∞ —Ü–≤–µ—Ç–∞ –Ω—é–¥. –õ—é–±–∏—Ç —Å—Ç–∞–ª—å–Ω—ã–µ —É–∫—Ä–∞—à–µ–Ω–∏—è ‚ú®"
  },
  {
    id: 8,
    name: "–ú–∞–∫—Å–∏ —é–±–∫–∞ –≤ —Ü–≤–µ—Ç–æ—á–µ–∫",
    brand: "H&M",
    category: "–Æ–±–∫–∏",
    size: "M",
    measurements: {
      waist: 70,
      hips: 96,
      length: 95
    },
    material: "–í–∏—Å–∫–æ–∑–∞",
    color: "–¶–≤–µ—Ç–æ—á–Ω—ã–π –ø—Ä–∏–Ω—Ç",
    features: [
      "–î–ª–∏–Ω–∞ –º–∞–∫—Å–∏",
      "–õ–µ—Ç—è—â–∞—è —Ç–∫–∞–Ω—å",
      "–†–µ–∑–∏–Ω–∫–∞ –Ω–∞ –ø–æ—è—Å–µ"
    ],
    condition: "–û—Ç–ª–∏—á–Ω–æ–µ",
    price: 1400,
    status: "booked",
    description: "üå∫ *H&M* –õ–µ—Ç—è—â–∞—è —é–±–∫–∞ –≤ –ø–æ–ª —Å —Ä–æ–º–∞–Ω—Ç–∏—á–Ω—ã–º —Ü–≤–µ—Ç–æ—á–Ω—ã–º –ø—Ä–∏–Ω—Ç–æ–º. –õ—é–±–∏—Ç –º–æ—Ä—Å–∫–æ–π –≤–æ–∑–¥—É—Ö!"
  }
];

// –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
let currentScreen = 'catalog';
let currentCategory = 'all';
let currentProduct = null;
let favorites = [];
let filters = {
  priceFrom: null,
  priceTo: null,
  sizes: [],
  statuses: ['available', 'booked']
};

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–∫—Ä–∞–Ω–∞–º–∏
function showScreen(screenName) {
  // –°–∫—Ä—ã–≤–∞–µ–º –≤—Å–µ —ç–∫—Ä–∞–Ω—ã
  document.querySelectorAll('.screen').forEach(screen => {
    screen.classList.add('hidden');
  });
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω—É–∂–Ω—ã–π —ç–∫—Ä–∞–Ω
  const targetScreen = document.getElementById(screenName + 'Screen');
  if (targetScreen) {
    targetScreen.classList.remove('hidden');
    currentScreen = screenName;
  }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º
function toggleFavorite(productId) {
  const index = favorites.indexOf(productId);
  if (index === -1) {
    favorites.push(productId);
    showToast('üíù –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ');
  } else {
    favorites.splice(index, 1);
    showToast('üíî –£–¥–∞–ª–µ–Ω–æ –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ sandbox)
  
  // –û–±–Ω–æ–≤–ª—è–µ–º UI
  updateFavoritesCounter();
  updateFavoriteButtons();
  
  // –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ, –æ–±–Ω–æ–≤–ª—è–µ–º –µ—ë
  if (currentScreen === 'favorites') {
    renderFavorites();
  }
}

function updateFavoritesCounter() {
  const counter = document.getElementById('favoritesCounter');
  counter.textContent = favorites.length;
  
  if (favorites.length > 0) {
    counter.classList.add('show');
  } else {
    counter.classList.remove('show');
  }
}

function updateFavoriteButtons() {
  document.querySelectorAll('.favorite-btn').forEach(btn => {
    const productId = parseInt(btn.dataset.productId);
    if (favorites.includes(productId)) {
      btn.classList.add('active');
      btn.innerHTML = '‚ù§Ô∏è';
    } else {
      btn.classList.remove('active');
      btn.innerHTML = 'ü§ç';
    }
  });
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤
function filterProducts() {
  let filteredProducts = products;
  
  // –§–∏–ª—å—Ç—Ä –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
  if (currentCategory !== 'all') {
    filteredProducts = filteredProducts.filter(product => product.category === currentCategory);
  }
  
  // –§–∏–ª—å—Ç—Ä –ø–æ —Ü–µ–Ω–µ
  if (filters.priceFrom !== null) {
    filteredProducts = filteredProducts.filter(product => product.price >= filters.priceFrom);
  }
  if (filters.priceTo !== null) {
    filteredProducts = filteredProducts.filter(product => product.price <= filters.priceTo);
  }
  
  // –§–∏–ª—å—Ç—Ä –ø–æ —Ä–∞–∑–º–µ—Ä–∞–º
  if (filters.sizes.length > 0) {
    filteredProducts = filteredProducts.filter(product => {
      return filters.sizes.some(size => product.size.includes(size));
    });
  }
  
  // –§–∏–ª—å—Ç—Ä –ø–æ —Å—Ç–∞—Ç—É—Å–∞–º
  filteredProducts = filteredProducts.filter(product => filters.statuses.includes(product.status));
  
  return filteredProducts;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞ —Ç–æ–≤–∞—Ä–æ–≤
function renderProducts() {
  const grid = document.getElementById('productsGrid');
  const emptyState = document.getElementById('emptyState');
  const filteredProducts = filterProducts();
  
  if (filteredProducts.length === 0) {
    grid.innerHTML = '';
    emptyState.classList.remove('hidden');
    return;
  }
  
  emptyState.classList.add('hidden');
  grid.innerHTML = filteredProducts.map((product, index) => createProductCard(product, index)).join('');
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  setTimeout(updateFavoriteButtons, 100);
}

function createProductCard(product, index) {
  const gradientClass = `gradient-${(index % 5) + 1}`;
  const statusLabels = {
    available: '–í –Ω–∞–ª–∏—á–∏–∏',
    booked: '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ',
    sold: '–ü—Ä–æ–¥–∞–Ω–æ'
  };
  
  return `
    <div class="product-card" onclick="showProductDetail(${product.id})">
      <div class="product-image ${gradientClass}">
        üëó
        <span class="product-status ${product.status}">${statusLabels[product.status]}</span>
        <button class="favorite-btn" data-product-id="${product.id}" onclick="event.stopPropagation(); toggleFavorite(${product.id})">
          ${favorites.includes(product.id) ? '‚ù§Ô∏è' : 'ü§ç'}
        </button>
      </div>
      <div class="product-info">
        <div class="product-name">${product.name}</div>
        <div class="product-brand">${product.brand}</div>
        <div class="product-details">
          <div class="product-size">–†–∞–∑–º–µ—Ä ${product.size}</div>
          <div class="product-price">${product.price.toLocaleString('ru-RU')} ‚ÇΩ</div>
        </div>
      </div>
    </div>
  `;
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
function showProductDetail(productId) {
  currentProduct = products.find(p => p.id === productId);
  if (!currentProduct) return;
  
  renderProductDetail();
  showScreen('product');
}

function renderProductDetail() {
  if (!currentProduct) return;
  
  const gradientClass = `gradient-${(currentProduct.id % 5) + 1}`;
  const statusLabels = {
    available: '–í –Ω–∞–ª–∏—á–∏–∏',
    booked: '–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ',
    sold: '–ü—Ä–æ–¥–∞–Ω–æ'
  };
  
  const measurementsList = [];
  if (currentProduct.measurements.chest) measurementsList.push({ icon: 'üëï', label: '–û–ì', value: `${currentProduct.measurements.chest} —Å–º` });
  if (currentProduct.measurements.waist) measurementsList.push({ icon: 'üìè', label: '–û–¢', value: `${currentProduct.measurements.waist} —Å–º` });
  if (currentProduct.measurements.hips) measurementsList.push({ icon: 'üìê', label: '–û–ë', value: `${currentProduct.measurements.hips} —Å–º` });
  if (currentProduct.measurements.length) measurementsList.push({ icon: 'üìè', label: '–î–ª–∏–Ω–∞', value: `${currentProduct.measurements.length} —Å–º` });
  if (currentProduct.measurements.sleeve) measurementsList.push({ icon: 'üëî', label: '–†—É–∫–∞–≤', value: `${currentProduct.measurements.sleeve} —Å–º` });
  
  const actionButton = getActionButton(currentProduct.status);
  const favoriteButton = `
    <button class="btn btn--outline" onclick="toggleFavorite(${currentProduct.id})">
      ${favorites.includes(currentProduct.id) ? 'üíî –£–¥–∞–ª–∏—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ' : '‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ'}
    </button>
  `;
  
  document.getElementById('productDetail').innerHTML = `
    <div class="product-gallery ${gradientClass}">
      üëó
      <button class="back-btn" onclick="showScreen('catalog')">
        üîô
      </button>
    </div>
    
    <div class="product-content">
      <div class="product-header">
        <h2 class="product-title">${currentProduct.name}</h2>
        <div class="product-subtitle">${currentProduct.brand}</div>
        <div class="product-price-large">${currentProduct.price.toLocaleString('ru-RU')} ‚ÇΩ</div>
        <span class="status status--${getStatusClass(currentProduct.status)}">${statusLabels[currentProduct.status]}</span>
      </div>
      
      <div class="section">
        <h3 class="section-title">üìè –†–∞–∑–º–µ—Ä—ã</h3>
        <div class="measurements">
          ${measurementsList.map(m => `
            <div class="measurement">
              <span class="measurement-icon">${m.icon}</span>
              <div>
                <div class="measurement-text">${m.label}</div>
                <div class="measurement-value">${m.value}</div>
              </div>
            </div>
          `).join('')}
        </div>
      </div>
      
      <div class="section">
        <h3 class="section-title">üìã –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏</h3>
        <div class="characteristics">
          <div class="characteristic">
            <span class="characteristic-label">–ú–∞—Ç–µ—Ä–∏–∞–ª</span>
            <span class="characteristic-value">${currentProduct.material}</span>
          </div>
          <div class="characteristic">
            <span class="characteristic-label">–¶–≤–µ—Ç</span>
            <span class="characteristic-value">${currentProduct.color}</span>
          </div>
          <div class="characteristic">
            <span class="characteristic-label">–°–æ—Å—Ç–æ—è–Ω–∏–µ</span>
            <span class="characteristic-value">${currentProduct.condition}</span>
          </div>
          <div class="characteristic">
            <span class="characteristic-label">–†–∞–∑–º–µ—Ä</span>
            <span class="characteristic-value">${currentProduct.size}</span>
          </div>
        </div>
      </div>
      
      <div class="section">
        <h3 class="section-title">‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏</h3>
        <div class="features">
          ${currentProduct.features.map(feature => `
            <div class="feature">
              <span>‚Ä¢</span>
              <span>${feature}</span>
            </div>
          `).join('')}
        </div>
      </div>
      
      <div class="section">
        <h3 class="section-title">üìù –û–ø–∏—Å–∞–Ω–∏–µ</h3>
        <div class="description">${currentProduct.description}</div>
      </div>
    </div>
    
    <div class="product-actions">
      ${actionButton}
      ${favoriteButton}
      <button class="btn btn--secondary btn--full" onclick="window.open('https://t.me/EskaPR', '_blank')">
        üìû –°–≤—è–∑–∞—Ç—å—Å—è –≤ Telegram
      </button>
    </div>
  `;
}

function getActionButton(status) {
  switch (status) {
    case 'available':
      return '<button class="btn btn--primary btn--full" onclick="openBookingModal()">üíå –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å</button>';
    case 'booked':
      return '<button class="btn btn--primary btn--full" disabled>üïê –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ</button>';
    case 'sold':
      return '<button class="btn btn--primary btn--full" disabled>‚úÖ –ü—Ä–æ–¥–∞–Ω–æ</button>';
    default:
      return '';
  }
}

function getStatusClass(status) {
  switch (status) {
    case 'available': return 'success';
    case 'booked': return 'warning';
    case 'sold': return 'info';
    default: return 'info';
  }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
function renderFavorites() {
  const grid = document.getElementById('favoritesGrid');
  const emptyState = document.getElementById('favoritesEmpty');
  const favoriteProducts = products.filter(p => favorites.includes(p.id));
  
  if (favoriteProducts.length === 0) {
    grid.innerHTML = '';
    emptyState.classList.remove('hidden');
    return;
  }
  
  emptyState.classList.add('hidden');
  grid.innerHTML = favoriteProducts.map((product, index) => createProductCard(product, index)).join('');
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  setTimeout(updateFavoriteButtons, 100);
}

function clearFavorites() {
  if (favorites.length === 0) return;
  
  if (confirm('–£–¥–∞–ª–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ?')) {
    favorites = [];
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π (localStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –≤ sandbox)
    updateFavoritesCounter();
    renderFavorites();
    showToast('üóë –ò–∑–±—Ä–∞–Ω–Ω–æ–µ –æ—á–∏—â–µ–Ω–æ');
  }
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω
function openModal(modalId) {
  const modal = document.getElementById(modalId);
  modal.classList.remove('hidden');
  document.body.style.overflow = 'hidden';
}

function closeModal(modalId) {
  const modal = document.getElementById(modalId);
  modal.classList.add('hidden');
  document.body.style.overflow = '';
}

function openBookingModal() {
  openModal('bookingModal');
}

// –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
function resetFilters() {
  filters = {
    priceFrom: null,
    priceTo: null,
    sizes: [],
    statuses: ['available', 'booked']
  };
  
  // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
  document.getElementById('priceFrom').value = '';
  document.getElementById('priceTo').value = '';
  document.querySelectorAll('.size-filter').forEach(cb => cb.checked = false);
  document.querySelectorAll('.status-filter').forEach(cb => {
    cb.checked = cb.value === 'available' || cb.value === 'booked';
  });
  
  applyFilters();
}

function applyFilters() {
  // –°–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ñ–æ—Ä–º—ã
  const priceFrom = document.getElementById('priceFrom').value;
  const priceTo = document.getElementById('priceTo').value;
  
  filters.priceFrom = priceFrom ? parseInt(priceFrom) : null;
  filters.priceTo = priceTo ? parseInt(priceTo) : null;
  
  filters.sizes = Array.from(document.querySelectorAll('.size-filter:checked')).map(cb => cb.value);
  filters.statuses = Array.from(document.querySelectorAll('.status-filter:checked')).map(cb => cb.value);
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Ñ–∏–ª—å—Ç—Ä—ã –∏ –∑–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
  renderProducts();
  closeModal('filtersModal');
  showToast('üéØ –§–∏–ª—å—Ç—Ä—ã –ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
function submitBooking() {
  const form = document.getElementById('bookingForm');
  if (!form.checkValidity()) {
    form.reportValidity();
    return;
  }
  
  const name = document.getElementById('bookingName').value;
  const phone = document.getElementById('bookingPhone').value;
  const comment = document.getElementById('bookingComment').value;
  const agree = document.getElementById('bookingAgree').checked;
  
  if (!agree) {
    alert('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å —É—Å–ª–æ–≤–∏—è–º–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
    return;
  }
  
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∑–∞—è–≤–∫–∏
  if (currentProduct) {
    currentProduct.status = 'booked';
  }
  
  closeModal('bookingModal');
  
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É—Å–ø–µ—à–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
  showToast('üéâ –°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ —á–µ—Ä–µ–∑ @EskaPR');
  
  // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ
  if (currentProduct) {
    renderProductDetail();
  }
  
  // –û—á–∏—â–∞–µ–º —Ñ–æ—Ä–º—É
  form.reset();
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function showToast(message) {
  const toast = document.getElementById('toast');
  const content = document.getElementById('toastContent');
  
  content.textContent = message;
  toast.classList.remove('hidden');
  toast.classList.add('show');
  
  setTimeout(() => {
    toast.classList.remove('show');
    setTimeout(() => {
      toast.classList.add('hidden');
    }, 250);
  }, 3000);
}

// –§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
function initApp() {
  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  document.getElementById('loadingSkeleton').classList.remove('hidden');
  
  // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É
  setTimeout(() => {
    document.getElementById('loadingSkeleton').classList.add('hidden');
    renderProducts();
    updateFavoritesCounter();
  }, 1000);
  
  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
  setupEventListeners();
}

function setupEventListeners() {
  // –§–∏–ª—å—Ç—Ä—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  document.querySelectorAll('.filter-btn[data-category]').forEach(btn => {
    btn.addEventListener('click', () => {
      // –û–±–Ω–æ–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
      document.querySelectorAll('.filter-btn[data-category]').forEach(b => b.classList.remove('active'));
      btn.classList.add('active');
      
      // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏ –æ–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä—ã
      currentCategory = btn.dataset.category;
      renderProducts();
    });
  });
  
  // –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞ (–∑–∞–≥–ª—É—à–∫–∞)
  document.getElementById('searchBtn').addEventListener('click', () => {
    showToast('üîç –§—É–Ω–∫—Ü–∏—è –ø–æ–∏—Å–∫–∞ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ —Å–ª–µ–¥—É—é—â–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏');
  });
  
  // –ö–Ω–æ–ø–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  document.getElementById('favoritesBtn').addEventListener('click', () => {
    renderFavorites();
    showScreen('favorites');
  });
  
  // –ö–Ω–æ–ø–∫–∞ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  document.getElementById('filtersModalBtn').addEventListener('click', () => {
    openModal('filtersModal');
  });
  
  // –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  document.getElementById('clearFavoritesBtn').addEventListener('click', clearFavorites);
  
  // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω—ã—Ö –æ–∫–æ–Ω –ø–æ Escape
  document.addEventListener('keydown', (e) => {
    if (e.key === 'Escape') {
      document.querySelectorAll('.modal:not(.hidden)').forEach(modal => {
        modal.classList.add('hidden');
      });
      document.body.style.overflow = '';
    }
  });
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
document.addEventListener('DOMContentLoaded', initApp);

// –§—É–Ω–∫—Ü–∏–∏, –¥–æ—Å—Ç—É–ø–Ω—ã–µ –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML
window.showScreen = showScreen;
window.showProductDetail = showProductDetail;
window.toggleFavorite = toggleFavorite;
window.openBookingModal = openBookingModal;
window.closeModal = closeModal;
window.resetFilters = resetFilters;
window.applyFilters = applyFilters;
window.submitBooking = submitBooking;
window.clearFavorites = clearFavorites;